{"version":3,"sources":["BooksAPI.js","Components/Books.js","Components/BookShelf.js","Components/Home.js","Components/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Books","props","useState","book","shelf","selectedOpton","setSelected","className","style","width","height","backgroundImage","imageLinks","smallThumbnail","value","onChange","event","console","log","window","cr","splice","target","fetch","id","method","body","JSON","stringify","then","res","json","disabled","title","authors","map","author","index","BookShelf","data","books","Shelf_title","GetBooksBasedShelf","ShelfName","AllBooks","resultBooks","push","Home","AllBooksData","setBooks","response","useEffect","CurrentlyReadingBooks","WantTpReadingBooks","ReadBooks","to","path","element","Search","type","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67bb2d1c.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n    fetch(`${api}/books`, { headers });\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import {useState} from 'react';\nimport { update, getAll } from \"../BooksAPI\";\n\nfunction Books(props) {\n    const [selectedOpton, setSelected] = useState(props.book.shelf);\n    const OptionChanged = (event) => {\n        console.log( 'Before : '+window.cr)\n        window.cr.splice(1,1);\n        console.log('After : '+ window.cr)\n\n        update(props.book, event.target.value)\n        setSelected(event.target.value);\n    }\n    return (\n      <li>\n        <div className=\"book\">\n          <div className=\"book-top\">\n            <div\n              className=\"book-cover\"\n              style={{\n                width: 128,\n                height: 193,\n                backgroundImage: `url(${props.book.imageLinks.smallThumbnail})`,\n              }}\n            ></div>\n            <div className=\"book-shelf-changer\">\n              <select value={selectedOpton} onChange={OptionChanged}>\n                <option value=\"none\" disabled>\n                  Move to...\n                </option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"book-title\">{props.book.title}</div>\n          <div className=\"book-authors\">\n            {props.book.authors.map((author, index) => (\n              <span key={index}>\n                {author} <br></br>\n              </span>\n            ))}\n          </div>\n        </div>\n      </li>\n    );\n  }\n\n export default Books;","import Books from './Books'\n\nfunction BookShelf({ data }) {\n  let books = data.books;\n  //console.log(data.setBooks);\n  return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{data.Shelf_title}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {books.map((book) => (\n            <Books key={book.id} book={book}></Books>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default BookShelf;\n","import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport BookShelf from \"./BookShelf\";\nimport { getAll } from \"../BooksAPI\";\nimport { Routes, Route, Link } from 'react-router-dom';\nimport Search from \"./Search\";\n\nfunction Home() {\n    const [showSearchPage, setShowSearchpage] = useState(false);\n    const [AllBooksData, setBooks] = useState([]);\n    const AllBooks = () => {\n      getAll()\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setBooks(data.books)\n        })\n    }\n    useEffect(() => {\n      AllBooks()\n    }, [])\n    const CurrentlyReadingBooks = GetBooksBasedShelf(\"currentlyReading\", AllBooksData);\n    const WantTpReadingBooks = GetBooksBasedShelf(\"wantToRead\", AllBooksData);\n    const ReadBooks = GetBooksBasedShelf(\"read\", AllBooksData);\n    console.log(CurrentlyReadingBooks);\n    console.log(WantTpReadingBooks);\n    console.log(ReadBooks);\n    window.cr = CurrentlyReadingBooks;\n  return (\n    <div>\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <div className=\"list-books-content\">\n            <div>\n            <BookShelf data={{ Shelf_title: 'Currently Reading', books: CurrentlyReadingBooks }}/> \n             <BookShelf data={{ Shelf_title: 'Want to Read', books: WantTpReadingBooks }}/> \n             <BookShelf data={{ Shelf_title: 'Read', books: ReadBooks }}/> \n            </div>\n          </div>\n          <div className=\"open-search\">\n          <Link to=\"Search\"> Add a book </Link>\n            <Routes>\n                <Route path=\"/Search\" element={<Search/>} />\n            </Routes>\n         \n            {/* <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>  */}\n          </div>\n        </div>\n    </div>\n  )\n}\n\n\nfunction GetBooksBasedShelf(ShelfName, AllBooks){\n    let resultBooks = [];\n      AllBooks.map(book => {\n          if(book.shelf === ShelfName)\n            resultBooks.push(book);\n        })\n    return resultBooks;\n  }\n  \n\nexport default Home","import React from 'react'\nimport Home from './Home'\nimport { Routes, Route, Link } from 'react-router-dom';\n\nfunction Search() {\n  return (\n    <div className=\"search-books\">\n        \n    <div className=\"search-books-bar\">\n        <Link className=\"close-search\" to=\"\"> Close</Link>\n        <Routes>\n            <Route path=\"/\" element={<Home/>} />\n        </Routes>\n\n      <div className=\"search-books-input-wrapper\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by title, author, or ISBN\"\n        />\n      </div>\n    </div>\n    <div className=\"search-books-results\">\n      <ol className=\"books-grid\"></ol>\n    </div>\n  </div>\n  )\n}\n\nexport default Search;\n","import \"./App.css\";\nimport React from 'react'\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport Search from \"./Components/Search\";\nimport Home from \"./Components/Home\";\n\n\nfunction App() {\n\n\n  return (\n    <BrowserRouter>\n    <div className=\"app\">\n        <Routes>\n            <Route path=\"/\" element={<Home/>} />\n        </Routes>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}