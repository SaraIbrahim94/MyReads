{"ast":null,"code":"var _jsxFileName = \"/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Home.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport BookShelf from \"./BookShelf\";\nimport { getAll } from \"../BooksAPI\";\nimport { Link } from 'react-router-dom';\nimport { Context } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [AllBooksData, setBooks] = useState([]);\n  const {\n    items,\n    setItems\n  } = useContext(Context);\n  console.log(items);\n  const AllBooks = () => {\n    getAll().then(response => {\n      return response.json();\n    }).then(data => {\n      setBooks(data.books);\n    });\n  };\n  useEffect(() => {\n    AllBooks();\n  }, []);\n  const CurrentlyReadingBooks = GetBooksBasedShelf(\"currentlyReading\", AllBooksData);\n  const WantTpReadingBooks = GetBooksBasedShelf(\"wantToRead\", AllBooksData);\n  const ReadBooks = GetBooksBasedShelf(\"read\", AllBooksData);\n  const [CurrentlyReadingBooks_, setCurrentlyReadingBooks] = useState(CurrentlyReadingBooks);\n  console.log('CR : ' + CurrentlyReadingBooks_);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(BookShelf, {\n            data: {\n              Shelf_title: 'Currently Reading',\n              books: AllBooksData\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"Search\",\n          children: \" Add a book \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"AL12R3+iW70fnvj6wwrBFsbRips=\");\n_c = Home;\nfunction GetBooksBasedShelf(ShelfName, AllBooks) {\n  let resultBooks = [];\n  AllBooks.map(book => {\n    if (book.shelf === ShelfName) resultBooks.push(book);\n  });\n  return resultBooks;\n}\n_c2 = GetBooksBasedShelf;\nexport default Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"GetBooksBasedShelf\");","map":{"version":3,"names":["React","useState","useEffect","useContext","BookShelf","getAll","Link","Context","Home","AllBooksData","setBooks","items","setItems","console","log","AllBooks","then","response","json","data","books","CurrentlyReadingBooks","GetBooksBasedShelf","WantTpReadingBooks","ReadBooks","CurrentlyReadingBooks_","setCurrentlyReadingBooks","Shelf_title","ShelfName","resultBooks","map","book","shelf","push"],"sources":["/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Home.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect, useContext } from \"react\";\nimport BookShelf from \"./BookShelf\";\nimport { getAll } from \"../BooksAPI\";\nimport { Link } from 'react-router-dom';\nimport { Context } from \"./Context\";\n\nfunction Home() {\n    const [AllBooksData, setBooks] = useState([]);\n    const { items, setItems } = useContext(Context);\n  console.log(items)\n    const AllBooks = () => {\n      getAll()\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setBooks(data.books)\n        })\n    }\n    useEffect(() => {\n      AllBooks()\n    }, [])\n    const CurrentlyReadingBooks = GetBooksBasedShelf(\"currentlyReading\", AllBooksData);\n    const WantTpReadingBooks = GetBooksBasedShelf(\"wantToRead\", AllBooksData);\n    const ReadBooks = GetBooksBasedShelf(\"read\", AllBooksData);\n    const [CurrentlyReadingBooks_, setCurrentlyReadingBooks] = useState(CurrentlyReadingBooks);\n    console.log('CR : '+CurrentlyReadingBooks_)\n    \n    return (\n        <div>\n            <div className=\"list-books\">\n            <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n                <div>\n                    <BookShelf data={{ Shelf_title: 'Currently Reading', books: AllBooksData }}/> \n               {/*  <BookShelf data={{ Shelf_title: 'Currently Reading', books: CurrentlyReadingBooks }}/> \n                <BookShelf data={{ Shelf_title: 'Want to Read', books: WantTpReadingBooks }}/> \n                <BookShelf data={{ Shelf_title: 'Read', books: ReadBooks }}/>  */}\n                </div>\n            </div>\n            <div className=\"open-search\">\n            <Link to=\"Search\"> Add a book </Link>\n            </div>\n            </div>\n        </div>\n    )\n}\n\n\nfunction GetBooksBasedShelf(ShelfName, AllBooks){\n    let resultBooks = [];\n      AllBooks.map(book => {\n          if(book.shelf === ShelfName)\n            resultBooks.push(book);\n        })\n    return resultBooks;\n  }\n  \n\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,OAAO,QAAQ,WAAW;AAAC;AAEpC,SAASC,IAAI,GAAG;EAAA;EACZ,MAAM,CAACC,YAAY,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM;IAAEU,KAAK;IAAEC;EAAS,CAAC,GAAGT,UAAU,CAACI,OAAO,CAAC;EACjDM,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAChB,MAAMI,QAAQ,GAAG,MAAM;IACrBV,MAAM,EAAE,CACLW,IAAI,CAACC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAI;MACZT,QAAQ,CAACS,IAAI,CAACC,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EACDlB,SAAS,CAAC,MAAM;IACda,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,MAAMM,qBAAqB,GAAGC,kBAAkB,CAAC,kBAAkB,EAAEb,YAAY,CAAC;EAClF,MAAMc,kBAAkB,GAAGD,kBAAkB,CAAC,YAAY,EAAEb,YAAY,CAAC;EACzE,MAAMe,SAAS,GAAGF,kBAAkB,CAAC,MAAM,EAAEb,YAAY,CAAC;EAC1D,MAAM,CAACgB,sBAAsB,EAAEC,wBAAwB,CAAC,GAAGzB,QAAQ,CAACoB,qBAAqB,CAAC;EAC1FR,OAAO,CAACC,GAAG,CAAC,OAAO,GAACW,sBAAsB,CAAC;EAE3C,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,YAAY;MAAA,wBAC3B;QAAK,SAAS,EAAC,kBAAkB;QAAA,uBAC7B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAgB;QAAA;QAAA;QAAA;MAAA,QACd,eACN;QAAK,SAAS,EAAC,oBAAoB;QAAA,uBAC/B;UAAA,uBACI,QAAC,SAAS;YAAC,IAAI,EAAE;cAAEE,WAAW,EAAE,mBAAmB;cAAEP,KAAK,EAAEX;YAAa;UAAE;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA;MAI3E;QAAA;QAAA;QAAA;MAAA,QACJ,eACN;QAAK,SAAS,EAAC,aAAa;QAAA,uBAC5B,QAAC,IAAI;UAAC,EAAE,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAoB;QAAA;QAAA;QAAA;MAAA,QAC/B;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA1CQD,IAAI;AAAA,KAAJA,IAAI;AA6Cb,SAASc,kBAAkB,CAACM,SAAS,EAAEb,QAAQ,EAAC;EAC5C,IAAIc,WAAW,GAAG,EAAE;EAClBd,QAAQ,CAACe,GAAG,CAACC,IAAI,IAAI;IACjB,IAAGA,IAAI,CAACC,KAAK,KAAKJ,SAAS,EACzBC,WAAW,CAACI,IAAI,CAACF,IAAI,CAAC;EAC1B,CAAC,CAAC;EACN,OAAOF,WAAW;AACpB;AAAC,MAPMP,kBAAkB;AAU3B,eAAed,IAAI;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}