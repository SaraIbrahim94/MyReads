{"ast":null,"code":"var _jsxFileName = \"/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Books.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { update } from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Books(props) {\n  _s();\n  const [selectedOpton, setSelected] = useState(props.book.shelf);\n  const OptionChanged = event => {\n    update(props.book, event.target.value);\n    setSelected(event.target.value);\n  };\n  //setSelected(props.book.shelf)\n  //console.log(props.book.shelf)\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${props.book.imageLinks.smallThumbnail})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-shelf-changer\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedOpton,\n            onChange: OptionChanged,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              disabled: true,\n              children: \"Move to...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"currentlyReading\",\n              children: \"Currently Reading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"wantToRead\",\n              children: \"Want to Read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"read\",\n              children: \"Read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-title\",\n        children: props.book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-authors\",\n        children: props.book.authors.map((author, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [author, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 26\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}\n_s(Books, \"RvLXzjY2KbeskgEc7uq/wfrOO7A=\");\n_c = Books;\nexport default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["useState","update","Books","props","selectedOpton","setSelected","book","shelf","OptionChanged","event","target","value","width","height","backgroundImage","imageLinks","smallThumbnail","title","authors","map","author","index"],"sources":["/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Books.js"],"sourcesContent":["import {useState} from 'react';\nimport { update } from \"../BooksAPI\";\n\nfunction Books(props) {\n    const [selectedOpton, setSelected] = useState(props.book.shelf);\n    const OptionChanged = (event) => {\n        update(props.book, event.target.value)\n        setSelected(event.target.value);\n    }\n    //setSelected(props.book.shelf)\n    //console.log(props.book.shelf)\n    return (\n      <li>\n        <div className=\"book\">\n          <div className=\"book-top\">\n            <div\n              className=\"book-cover\"\n              style={{\n                width: 128,\n                height: 193,\n                backgroundImage: `url(${props.book.imageLinks.smallThumbnail})`,\n              }}\n            ></div>\n            <div className=\"book-shelf-changer\">\n              <select value={selectedOpton} onChange={OptionChanged}>\n                <option value=\"none\" disabled>\n                  Move to...\n                </option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"book-title\">{props.book.title}</div>\n          <div className=\"book-authors\">\n            {props.book.authors.map((author, index) => (\n              <span key={index}>\n                {author} <br></br>\n              </span>\n            ))}\n          </div>\n        </div>\n      </li>\n    );\n  }\n\n export default Books;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAASC,MAAM,QAAQ,aAAa;AAAC;AAErC,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EAClB,MAAM,CAACC,aAAa,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAACG,IAAI,CAACC,KAAK,CAAC;EAC/D,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC7BR,MAAM,CAACE,KAAK,CAACG,IAAI,EAAEG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACtCN,WAAW,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EACD;EACA;EACA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAK,SAAS,EAAC,UAAU;QAAA,wBACvB;UACE,SAAS,EAAC,YAAY;UACtB,KAAK,EAAE;YACLC,KAAK,EAAE,GAAG;YACVC,MAAM,EAAE,GAAG;YACXC,eAAe,EAAG,OAAMX,KAAK,CAACG,IAAI,CAACS,UAAU,CAACC,cAAe;UAC/D;QAAE;UAAA;UAAA;UAAA;QAAA,QACG,eACP;UAAK,SAAS,EAAC,oBAAoB;UAAA,uBACjC;YAAQ,KAAK,EAAEZ,aAAc;YAAC,QAAQ,EAAEI,aAAc;YAAA,wBACpD;cAAQ,KAAK,EAAC,MAAM;cAAC,QAAQ;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAEpB,eACT;cAAQ,KAAK,EAAC,kBAAkB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA2B,eAC3D;cAAQ,KAAK,EAAC,YAAY;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAsB,eAChD;cAAQ,KAAK,EAAC,MAAM;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAc,eAClC;cAAQ,KAAK,EAAC,MAAM;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAc;UAAA;YAAA;YAAA;YAAA;UAAA;QAC3B;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAK,SAAS,EAAC,YAAY;QAAA,UAAEL,KAAK,CAACG,IAAI,CAACW;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eACpD;QAAK,SAAS,EAAC,cAAc;QAAA,UAC1Bd,KAAK,CAACG,IAAI,CAACY,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACpC;UAAA,WACGD,MAAM,oBAAE;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,GADTC,KAAK;UAAA;UAAA;UAAA;QAAA,QAGjB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACH;AAET;AAAC,GA3CMnB,KAAK;AAAA,KAALA,KAAK;AA6Cb,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}