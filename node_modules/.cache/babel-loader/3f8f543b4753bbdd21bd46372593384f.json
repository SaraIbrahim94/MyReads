{"ast":null,"code":"var _jsxFileName = \"/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Home.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport BookShelf from \"./BookShelf\";\nimport { getAll } from \"../BooksAPI\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [AllBooksData, setBooks] = useState([]);\n  const AllBooks = () => {\n    getAll().then(response => {\n      return response.json();\n    }).then(data => {\n      setBooks(data.books);\n    });\n  };\n  useEffect(() => {\n    AllBooks();\n  }, []);\n  const CurrentlyReadingBooks = GetBooksBasedShelf(\"currentlyReading\", AllBooksData);\n  const WantTpReadingBooks = GetBooksBasedShelf(\"wantToRead\", AllBooksData);\n  const ReadBooks = GetBooksBasedShelf(\"read\", AllBooksData);\n  console.log(CurrentlyReadingBooks);\n  console.log(WantTpReadingBooks);\n  console.log(ReadBooks);\n  window.cr = CurrentlyReadingBooks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BookShelf, {\n            data: {\n              Shelf_title: 'Currently Reading',\n              books: CurrentlyReadingBooks\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BookShelf, {\n            data: {\n              Shelf_title: 'Want to Read',\n              books: WantTpReadingBooks\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(BookShelf, {\n            data: {\n              Shelf_title: 'Read',\n              books: ReadBooks\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"Search\",\n          children: \" Add a book \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"G9KstUE70grImumE/akTk7K+CAE=\");\n_c = Home;\nfunction GetBooksBasedShelf(ShelfName, AllBooks) {\n  let resultBooks = [];\n  AllBooks.map(book => {\n    if (book.shelf === ShelfName) resultBooks.push(book);\n  });\n  return resultBooks;\n}\n_c2 = GetBooksBasedShelf;\nexport default Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"GetBooksBasedShelf\");","map":{"version":3,"names":["React","useState","useEffect","BookShelf","getAll","Link","Home","AllBooksData","setBooks","AllBooks","then","response","json","data","books","CurrentlyReadingBooks","GetBooksBasedShelf","WantTpReadingBooks","ReadBooks","console","log","window","cr","Shelf_title","ShelfName","resultBooks","map","book","shelf","push"],"sources":["/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Home.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport BookShelf from \"./BookShelf\";\nimport { getAll } from \"../BooksAPI\";\nimport { Link } from 'react-router-dom';\n\nfunction Home() {\n    const [AllBooksData, setBooks] = useState([]);\n    const AllBooks = () => {\n      getAll()\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setBooks(data.books)\n        })\n    }\n    useEffect(() => {\n      AllBooks()\n    }, [])\n    const CurrentlyReadingBooks = GetBooksBasedShelf(\"currentlyReading\", AllBooksData);\n    const WantTpReadingBooks = GetBooksBasedShelf(\"wantToRead\", AllBooksData);\n    const ReadBooks = GetBooksBasedShelf(\"read\", AllBooksData);\n    console.log(CurrentlyReadingBooks);\n    console.log(WantTpReadingBooks);\n    console.log(ReadBooks);\n    window.cr = CurrentlyReadingBooks;\n  return (\n    <div>\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <div className=\"list-books-content\">\n            <div>\n            <BookShelf data={{ Shelf_title: 'Currently Reading', books: CurrentlyReadingBooks }}/> \n             <BookShelf data={{ Shelf_title: 'Want to Read', books: WantTpReadingBooks }}/> \n             <BookShelf data={{ Shelf_title: 'Read', books: ReadBooks }}/> \n            </div>\n          </div>\n          <div className=\"open-search\">\n          <Link to=\"Search\"> Add a book </Link>\n          </div>\n        </div>\n    </div>\n  )\n}\n\n\nfunction GetBooksBasedShelf(ShelfName, AllBooks){\n    let resultBooks = [];\n      AllBooks.map(book => {\n          if(book.shelf === ShelfName)\n            resultBooks.push(book);\n        })\n    return resultBooks;\n  }\n  \n\nexport default Home"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,SAASC,IAAI,GAAG;EAAA;EACZ,MAAM,CAACC,YAAY,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAMQ,QAAQ,GAAG,MAAM;IACrBL,MAAM,EAAE,CACLM,IAAI,CAACC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAI;MACZL,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EACDZ,SAAS,CAAC,MAAM;IACdO,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,MAAMM,qBAAqB,GAAGC,kBAAkB,CAAC,kBAAkB,EAAET,YAAY,CAAC;EAClF,MAAMU,kBAAkB,GAAGD,kBAAkB,CAAC,YAAY,EAAET,YAAY,CAAC;EACzE,MAAMW,SAAS,GAAGF,kBAAkB,CAAC,MAAM,EAAET,YAAY,CAAC;EAC1DY,OAAO,CAACC,GAAG,CAACL,qBAAqB,CAAC;EAClCI,OAAO,CAACC,GAAG,CAACH,kBAAkB,CAAC;EAC/BE,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EACtBG,MAAM,CAACC,EAAE,GAAGP,qBAAqB;EACnC,oBACE;IAAA,uBACI;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAK,SAAS,EAAC,kBAAkB;QAAA,uBAC/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAgB;QAAA;QAAA;QAAA;MAAA,QACZ,eACN;QAAK,SAAS,EAAC,oBAAoB;QAAA,uBACjC;UAAA,wBACA,QAAC,SAAS;YAAC,IAAI,EAAE;cAAEQ,WAAW,EAAE,mBAAmB;cAAET,KAAK,EAAEC;YAAsB;UAAE;YAAA;YAAA;YAAA;UAAA,QAAE,eACrF,QAAC,SAAS;YAAC,IAAI,EAAE;cAAEQ,WAAW,EAAE,cAAc;cAAET,KAAK,EAAEG;YAAmB;UAAE;YAAA;YAAA;YAAA;UAAA,QAAE,eAC9E,QAAC,SAAS;YAAC,IAAI,EAAE;cAAEM,WAAW,EAAE,MAAM;cAAET,KAAK,EAAEI;YAAU;UAAE;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA;MACxD;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAK,SAAS,EAAC,aAAa;QAAA,uBAC5B,QAAC,IAAI;UAAC,EAAE,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAoB;QAAA;QAAA;QAAA;MAAA,QAC/B;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAxCQZ,IAAI;AAAA,KAAJA,IAAI;AA2Cb,SAASU,kBAAkB,CAACQ,SAAS,EAAEf,QAAQ,EAAC;EAC5C,IAAIgB,WAAW,GAAG,EAAE;EAClBhB,QAAQ,CAACiB,GAAG,CAACC,IAAI,IAAI;IACjB,IAAGA,IAAI,CAACC,KAAK,KAAKJ,SAAS,EACzBC,WAAW,CAACI,IAAI,CAACF,IAAI,CAAC;EAC1B,CAAC,CAAC;EACN,OAAOF,WAAW;AACpB;AAAC,MAPMT,kBAAkB;AAU3B,eAAeV,IAAI;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}