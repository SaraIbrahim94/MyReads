[{"/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/index.js":"1","/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/App.js":"2","/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/BooksAPI.js":"3","/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/BookShelf.js":"4","/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Books.js":"5","/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Search.js":"6","/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Home.js":"7","/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Context.js":"8","/Users/saraibrahim/Desktop/Tuts/React/starter/src/index.js":"9","/Users/saraibrahim/Desktop/Tuts/React/starter/src/App.js":"10","/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Search.js":"11","/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Context.js":"12","/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Home.js":"13","/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Books.js":"14","/Users/saraibrahim/Desktop/Tuts/React/starter/src/BooksAPI.js":"15","/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/BookShelf.js":"16"},{"size":219,"mtime":1668935438233,"results":"17","hashOfConfig":"18"},{"size":570,"mtime":1669108295919,"results":"19","hashOfConfig":"18"},{"size":994,"mtime":1668977476151,"results":"20","hashOfConfig":"18"},{"size":688,"mtime":1669107731426,"results":"21","hashOfConfig":"18"},{"size":1916,"mtime":1669048793835,"results":"22","hashOfConfig":"18"},{"size":2918,"mtime":1669046545301,"results":"23","hashOfConfig":"18"},{"size":2062,"mtime":1669108365889,"results":"24","hashOfConfig":"18"},{"size":323,"mtime":1669108388657,"results":"25","hashOfConfig":"18"},{"size":219,"mtime":1668935438233,"results":"26","hashOfConfig":"27"},{"size":570,"mtime":1669108295919,"results":"28","hashOfConfig":"27"},{"size":3003,"mtime":1669115159715,"results":"29","hashOfConfig":"27"},{"size":330,"mtime":1669110039719,"results":"30","hashOfConfig":"27"},{"size":2124,"mtime":1669111020825,"results":"31","hashOfConfig":"27"},{"size":3106,"mtime":1669116399487,"results":"32","hashOfConfig":"27"},{"size":932,"mtime":1669115184496,"results":"33","hashOfConfig":"27"},{"size":1588,"mtime":1669111232111,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"utepcu",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"sl5ifa",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},"/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/index.js",[],["74","75"],"/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/App.js",[],"/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/BooksAPI.js",[],"/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/BookShelf.js",["76","77"],"/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Books.js",["78","79","80"],"import {useState, useEffect, useCallback} from 'react';\nimport { update } from \"../BooksAPI\";\nimport debounce from 'lodash.debounce';\n\nfunction Books(props) {\n    const [OptionValue, setOption] = useState(props.book.shelf);\n    //const [selectedOpton, setSelected] = useState(OptionValue);\n\n    const OptionUpdateInDB = (event) => {\n       // setOption(OptionValue);\n        update(props.book, OptionValue)\n    //    setSelected(OptionValue);\n        console.log(OptionValue)\n    }\n\n    const OptionChanged = (event) => {\n      setOption(event.target.value);\n      console.log(event.target.value)\n    }\n\n    useEffect(() => {\n      OptionUpdateInDB()\n    }, [OptionValue]);\n\n    console.log(OptionValue)\n\n    return (\n      <li>\n        <div className=\"book\">\n          <div className=\"book-top\">\n            <div\n              className=\"book-cover\"\n              style={{\n                width: 128,\n                height: 193,\n                backgroundImage: `url(${props.book.imageLinks.smallThumbnail})`,\n              }}\n            ></div>\n            <div className=\"book-shelf-changer\">\n              <select value={OptionValue} onChange={OptionChanged}>\n                <option value=\"none\" disabled>\n                  Move to...\n                </option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"book-title\">{props.book.title}</div>\n          <div className=\"book-authors\">\n            {props.book.authors.map((author, index) => (\n              <span key={index}>\n                {author} <br></br>\n              </span>\n            ))}\n          </div>\n        </div>\n      </li>\n    );\n  }\n\n export default Books;","/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Search.js",["81","82"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useState, useCallback, useEffect } from \"react\";\nimport debounce from 'lodash.debounce';\nimport Books from './Books'\n\nconst api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\nconst headers = {\n    Accept: \"application/json\",\n    Authorization: token,\n  };\n\nfunction Search() {\n    const [SearchResult, setSearchResult] = useState([]);\n    const [query, setSearchInput] = useState(\"\");\n\n    const SearchQueryHandler = (event) => {\n        setSearchInput(event.target.value);\n       // SearchQuery();\n    }\n    const debouncedSearchQuery= useCallback(\n        debounce(SearchQueryHandler, 300)\n   , []);\n\n    const SearchQuery = () => {\n        let maxResults = 17;\n        if(query !== \"\"){\n            fetch(`${api}/search`, {\n                method: \"POST\",\n                headers: {\n                ...headers,\n                \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ query, maxResults }),\n            })\n            .then(response => {\n                return response.json()\n            })\n            .then(data => {\n                setSearchResult(data.books)\n            })\n        }\n     }\n  \n\n    useEffect(() => {\n        SearchQuery()\n    }, [query]);\n\n    if(SearchResult?.length > 0 ){\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to=\"/\"> Close</Link>\n\n                <div className=\"search-books-input-wrapper\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Search by title, author, or ISBN\"\n                    onChange={debouncedSearchQuery}\n                    />\n                </div>\n                </div>\n                <div className=\"search-books-results\">\n                <ol className=\"books-grid\">\n                    {SearchResult.map((book) => (\n                        <Books key={book.id} book={book}></Books>\n                    ))} \n                </ol>\n                </div>\n            </div>\n        )\n    }else{\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to=\"/\"> Close</Link>\n\n                <div className=\"search-books-input-wrapper\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Search by title, author, or ISBN\"\n                    onChange={debouncedSearchQuery}\n                    />\n                </div>\n                </div>\n                <div className=\"search-books-results\">\n                <ol className=\"books-grid\">\n                   No result for your Search\n                </ol>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default Search;\n","/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Home.js",["83","84","85","86","87"],"/Users/saraibrahim/Desktop/Tuts/React/MyReads-Final/starter/src/Components/Context.js",[],"/Users/saraibrahim/Desktop/Tuts/React/starter/src/index.js",[],["88","89"],"/Users/saraibrahim/Desktop/Tuts/React/starter/src/App.js",[],"/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Search.js",["90","91"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useState, useCallback, useEffect } from \"react\";\nimport debounce from 'lodash.debounce';\nimport Books from './Books'\n\nconst api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\nconst headers = {\n    Accept: \"application/json\",\n    Authorization: token,\n  };\n\nfunction Search() {\n    const [SearchResult, setSearchResult] = useState([]);\n    const [query, setSearchInput] = useState(\"\");\n\n    const SearchQueryHandler = (event) => {\n        setSearchInput(event.target.value);\n       // SearchQuery();\n    }\n    const debouncedSearchQuery= useCallback(\n        debounce(SearchQueryHandler, 300)\n   , []);\n\n   const SearchQuery = () => {\n        let maxResults = 17;\n        if(query !== \"\"){\n            fetch(`${api}/search`, {\n                method: \"POST\",\n                headers: {\n                ...headers,\n                \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ query, maxResults }),\n            })\n            .then(response => {\n                return response.json()\n            })\n            .then(data => {\n                setSearchResult(data.books)\n            })\n        }\n     }\n  \n\n    useEffect(() => {\n        SearchQuery()\n    }, [query]);\n\n    //console.log(Search.length)\n    if(SearchResult.length > 0 ){\n        console.log('First :' + SearchResult.length )\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to=\"/\"> Close</Link>\n\n                <div className=\"search-books-input-wrapper\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Search by title, author, or ISBN\"\n                    onChange={debouncedSearchQuery}\n                    />\n                </div>\n                </div>\n                <div className=\"search-books-results\">\n                <ol className=\"books-grid\">\n                    {SearchResult.map((book) => (\n                        <Books key={book.id} book={book}></Books>\n                    ))} \n                </ol>\n                </div>\n            </div>\n        )\n    }else{\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to=\"/\"> Close</Link>\n\n                <div className=\"search-books-input-wrapper\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Search by title, author, or ISBN\"\n                    onChange={debouncedSearchQuery}\n                    />\n                </div>\n                </div>\n                <div className=\"search-books-results\">\n                <ol className=\"books-grid\">\n                   No result for your Search\n                </ol>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default Search;\n","/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Context.js",[],"/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Home.js",["92"],"import React from 'react'\nimport { useEffect, useContext } from \"react\";\nimport BookShelf from \"./BookShelf\";\nimport { getAll } from \"../BooksAPI\";\nimport { Link } from 'react-router-dom';\nimport { Context } from \"./Context\";\n\nfunction Home() {\n  const { AllBooksData, setBooks } = useContext(Context);\n // console.log(AllBooksData)\n    const AllBooks = () => {\n      getAll()\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setBooks(data.books);\n        })\n    }\n    useEffect(() => {\n      AllBooks()\n    }, [])\n    \n    /*const CurrentlyReadingBooks = GetBooksBasedShelf(\"currentlyReading\", AllBooksData);\n    const WantTpReadingBooks = GetBooksBasedShelf(\"wantToRead\", AllBooksData);\n    const ReadBooks = GetBooksBasedShelf(\"read\", AllBooksData);\n    const [CurrentlyReadingBooks_, setCurrentlyReadingBooks] = useState(CurrentlyReadingBooks);\n    console.log('CR : '+CurrentlyReadingBooks_)*/\n    \n    return (\n        <div>\n            <div className=\"list-books\">\n            <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n                <div>\n                <BookShelf data={{ Shelf_title: 'Currently Reading', books: AllBooksData }}/> \n               {/*     <BookShelf data={{ Shelf_title: 'Currently Reading', books: AllBooksData }}/> \n                 <BookShelf data={{ Shelf_title: 'Currently Reading', books: CurrentlyReadingBooks }}/> \n                <BookShelf data={{ Shelf_title: 'Want to Read', books: WantTpReadingBooks }}/> \n                <BookShelf data={{ Shelf_title: 'Read', books: ReadBooks }}/>  */}\n                </div>\n            </div>\n            <div className=\"open-search\">\n            <Link to=\"Search\"> Add a book </Link>\n            </div>\n            </div>\n        </div>\n    )\n}\n\n/*\nfunction GetBooksBasedShelf(ShelfName, AllBooks){\n    let resultBooks = [];\n      AllBooks.map(book => {\n          if(book.shelf === ShelfName)\n            resultBooks.push(book);\n        })\n    return resultBooks;\n  }\n  */\n\nexport default Home;","/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/Books.js",["93","94","95","96"],"/Users/saraibrahim/Desktop/Tuts/React/starter/src/BooksAPI.js",[],"/Users/saraibrahim/Desktop/Tuts/React/starter/src/Components/BookShelf.js",["97","98","99","100","101","102","103"],"import Books from './Books'\nimport { useContext } from \"react\";\nimport { Context } from \"./Context\";\n\nfunction BookShelf({ data }) {\n  //let books = data.books;\n  //console.log(data.setBooks);\n  const { AllBooksData, setBooks } = useContext(Context);\n\n  const currentlyReading = AllBooksData.map((book) => {\n    if(book.shelf == 'currentlyReading'){\n      return(\n        <Books key={book.id} book={book}></Books>\n      )\n    }\n  })\n\n  const WantToRead = AllBooksData.map((book) => {\n    if(book.shelf == 'wantToRead'){\n      return(\n        <Books key={book.id} book={book}></Books>\n      )\n    }\n  })\n\n  const Read = AllBooksData.map((book) => {\n    if(book.shelf == 'read'){\n      return(\n        <Books key={book.id} book={book}></Books>\n      )\n    }\n  })\n  return (\n    <div>\n         <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">Currently Reading</h2>\n          <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {currentlyReading}\n            </ol>\n          </div>\n        </div>\n\n         <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">Want To Read</h2>\n          <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {WantToRead}\n            </ol>\n          </div>\n        </div>\n\n         <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">Read</h2>\n          <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {Read}\n            </ol>\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default BookShelf;\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"112","line":9,"column":24,"nodeType":"110","messageId":"111","endLine":9,"endColumn":32},{"ruleId":"108","severity":1,"message":"113","line":1,"column":30,"nodeType":"110","messageId":"111","endLine":1,"endColumn":41},{"ruleId":"108","severity":1,"message":"114","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":23,"column":8,"nodeType":"117","endLine":23,"endColumn":21,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":23,"column":33,"nodeType":"110","endLine":23,"endColumn":44},{"ruleId":"115","severity":1,"message":"120","line":50,"column":8,"nodeType":"117","endLine":50,"endColumn":15,"suggestions":"121"},{"ruleId":"108","severity":1,"message":"122","line":10,"column":20,"nodeType":"110","messageId":"111","endLine":10,"endColumn":28},{"ruleId":"108","severity":1,"message":"123","line":25,"column":11,"nodeType":"110","messageId":"111","endLine":25,"endColumn":29},{"ruleId":"108","severity":1,"message":"124","line":26,"column":11,"nodeType":"110","messageId":"111","endLine":26,"endColumn":20},{"ruleId":"108","severity":1,"message":"125","line":27,"column":36,"nodeType":"110","messageId":"111","endLine":27,"endColumn":60},{"ruleId":"126","severity":1,"message":"127","line":55,"column":25,"nodeType":"128","messageId":"129","endLine":55,"endColumn":27},{"ruleId":"104","replacedBy":"130"},{"ruleId":"106","replacedBy":"131"},{"ruleId":"115","severity":1,"message":"119","line":23,"column":33,"nodeType":"110","endLine":23,"endColumn":44},{"ruleId":"115","severity":1,"message":"120","line":50,"column":8,"nodeType":"117","endLine":50,"endColumn":15,"suggestions":"132"},{"ruleId":"115","severity":1,"message":"133","line":22,"column":8,"nodeType":"117","endLine":22,"endColumn":10,"suggestions":"134"},{"ruleId":"108","severity":1,"message":"113","line":1,"column":30,"nodeType":"110","messageId":"111","endLine":1,"endColumn":41},{"ruleId":"108","severity":1,"message":"135","line":14,"column":13,"nodeType":"110","messageId":"111","endLine":14,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":43,"column":8,"nodeType":"117","endLine":43,"endColumn":20,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":56,"column":37,"nodeType":"139","messageId":"140","endLine":56,"endColumn":39},{"ruleId":"108","severity":1,"message":"112","line":8,"column":25,"nodeType":"110","messageId":"111","endLine":8,"endColumn":33},{"ruleId":"126","severity":1,"message":"141","line":10,"column":52,"nodeType":"128","messageId":"142","endLine":10,"endColumn":54},{"ruleId":"137","severity":1,"message":"138","line":11,"column":19,"nodeType":"139","messageId":"140","endLine":11,"endColumn":21},{"ruleId":"126","severity":1,"message":"141","line":18,"column":46,"nodeType":"128","messageId":"142","endLine":18,"endColumn":48},{"ruleId":"137","severity":1,"message":"138","line":19,"column":19,"nodeType":"139","messageId":"140","endLine":19,"endColumn":21},{"ruleId":"126","severity":1,"message":"141","line":26,"column":40,"nodeType":"128","messageId":"142","endLine":26,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":27,"column":19,"nodeType":"139","messageId":"140","endLine":27,"endColumn":21},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'Books' is defined but never used.","Identifier","unusedVar","'setBooks' is assigned a value but never used.","'useCallback' is defined but never used.","'debounce' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'OptionUpdateInDB'. Either include it or remove the dependency array.","ArrayExpression",["145"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has a missing dependency: 'SearchQuery'. Either include it or remove the dependency array.",["146"],"'setItems' is assigned a value but never used.","'WantTpReadingBooks' is assigned a value but never used.","'ReadBooks' is assigned a value but never used.","'setCurrentlyReadingBooks' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["143"],["144"],["147"],"React Hook useEffect has a missing dependency: 'AllBooks'. Either include it or remove the dependency array.",["148"],"'AllBooksData' is assigned a value but never used.",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [OptionUpdateInDB, OptionValue]",{"range":"159","text":"160"},"Update the dependencies array to be: [SearchQuery, query]",{"range":"161","text":"162"},{"range":"163","text":"162"},"Update the dependencies array to be: [AllBooks]",{"range":"164","text":"165"},"Update the dependencies array to be: [OptionUpdateInDB, ShelfValue]",{"range":"166","text":"167"},[658,671],"[OptionUpdateInDB, OptionValue]",[1311,1318],"[SearchQuery, query]",[1310,1317],[568,570],"[AllBooks]",[1219,1231],"[OptionUpdateInDB, ShelfValue]"]